{"version":3,"sources":["Components/PokemonList/PokemonCard/PokemonCard.tsx","API/api.ts","Redux/pokedexReducer.ts","Components/PokemonList/Paginator/Paginator.tsx","Components/PokemonList/Paginator/PaginatorContainer.tsx","Components/PokemonList/PokemonList.tsx","Components/Preloader/preloader.js","Components/PokemonList/PokemonListContainer.tsx","Components/PokemonSearchForm/PokemonSearchForm.tsx","Components/PokemonSearchForm/PokemonSearchFormContainer.tsx","Components/Filter/FilterCheckbox/FilterCheckbox.tsx","Components/Filter/Filter.tsx","Components/Filter/FilterContainer.tsx","App.js","Redux/store.ts","index.js"],"names":["PokemonCard","props","useState","side","setSide","className","type","onClick","hp","max","value","attack","defense","specialAttack","specialDefense","speed","id","src","photo","alt","name","weight","height","instance","axios","create","baseURL","pokemonAPI","count","cardQuantity","get","then","response","initialState","pokemonListData","pokemon","searchHistory","typesData","activeFilter","errorBySearch","isShowPaginator","isLoading","actions","setPokemon","payload","toggleShowPaginator","toggle","toggleLoading","setActiveFilter","delActiveFilter","delFilter","errorSearch","error","setPokemonTypeData","types","setPokemonInfo","info","resetPokemonInfo","setFindPokemon","deleteFindPokemon","requestPokemon","dispatch","a","data","results","getPokemonData","pokedexReducer","state","action","map","x","includes","filter","item","Paginator","viewCards10","viewCards20","viewCards50","viewCards100","onCardQuantity","onMorePokemon","PaginatorContainer","number","setState","pokemonInfo","length","pokemonList","forEach","element","this","React","Component","connect","pokedex","PokemonList","onDeleteFindPokemon","sort","b","onMapping","mapName","p","stats","base_stat","sprites","other","dream_world","front_default","Preloader","version","xmlns","xmlnsXlink","y","viewBox","enableBackground","xmlSpace","fill","cx","cy","r","d","PokemonListContainer","PokemonSearchForm","initialValues","term","onSubmit","values","setSubmitting","toLowerCase","onSearchPokemon","isSubmitting","style","padding","color","placeholder","disabled","PokemonSearchFormContainer","findPokemon","FilterCheckbox","setCheckType","delCheckType","activeType","setActiveType","checked","onChange","htmlFor","Filter","activeBtn","onShowAllPokemon","onShowPokemon","TypesElement","FilterListContainer","isActiveBtn","active","getPokemonWithTypes","el","getTypes","alert","App","useEffect","document","title","FilterContainer","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c0b1df5d.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport  \"./PokemonCard.css\"\r\nimport \"../../../Assets/Images/search.svg\"\r\n\r\n\r\ntype PropsType = {\r\n    type: string\r\n\r\n    hp: number\r\n    attack: number\r\n    defense:number\r\n    specialAttack:number\r\n    specialDefense:number\r\n    speed: number\r\n    id:number\r\n    name:string\r\n    weight:number\r\n    height:number\r\n    photo:string\r\n\r\n}\r\n\r\n\r\n    let PokemonCard: React.FC<PropsType> = (props)=> {\r\n    let[side, setSide] = useState(true);\r\n\r\n\r\n\r\n    return ( <div className={`card card_${props.type}`}>\r\n            {!side && <div onClick={()=>{\r\n            setSide(!side)\r\n            }\r\n            } className={`backside sideTrue`}>\r\n                <div>\r\n                <label>HP:{props.hp}</label>\r\n                <progress max=\"100\" value={props.hp}/>\r\n                </div>\r\n                <div>\r\n                <label>Attack:{props.attack}</label>\r\n                <progress max=\"100\" value={props.attack}/>\r\n                </div>\r\n                <div>\r\n                <label>Defense:{props.defense}</label>\r\n                <progress max=\"100\" value={props.defense}/>\r\n                </div>\r\n                <div>\r\n                <label>Special Attack:{props.specialAttack}</label>\r\n                <progress max=\"100\" value={props.specialAttack}/>\r\n                </div>\r\n                <div>\r\n                <label>Special Defense:{props.specialDefense}</label>\r\n                <progress max=\"100\" value={props.specialDefense}/>\r\n                </div>\r\n                <div>\r\n                <label>Speed:{props.speed}</label>\r\n                <progress max=\"100\" value={props.speed}/>\r\n                </div>\r\n\r\n            </div>\r\n            }\r\n        {side &&  <div onClick={()=>{\r\n            setSide(!side)\r\n        }\r\n        } className=\"front_side\">\r\n            <div>\r\n                <div className=\"pokemon_id\">index: {props.id}</div>\r\n                <img className=\"photo\" src={props.photo} alt={props.name}/>\r\n            </div>\r\n        <div className=\"main\">\r\n            <div className=\"name\">{props.name}</div>\r\n            <div className=\"hp\">HEALTH: {props.hp}</div>\r\n        </div>\r\n            <div className=\"stats\">\r\n                <div className=\"stats_item\"> {props.weight} kg<span className={`tag tag_${props.type}`}>Weight</span></div>\r\n                <div className=\"stats_item center_item\"> {props.type} <span className={`tag tag_${props.type}`}>Type</span></div>\r\n                <div className=\"stats_item\">{props.height} m<span className={`tag tag_${props.type}`}>Height</span></div>\r\n            </div>\r\n            </div>\r\n        }\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default PokemonCard;","import  axios from \"axios\";\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://pokeapi.co/api/v2/'\r\n\r\n})\r\n\r\nexport const pokemonAPI = {\r\n    getPokemonList(count: number, cardQuantity: number) {\r\n        return instance.get(`pokemon?limit=${cardQuantity}&offset=${count}`)\r\n            .then(response => {\r\n                return response\r\n            });\r\n    },\r\n    getPokemonData(name: string) {\r\n        return instance.get(`pokemon/${name}`)\r\n            .then(response => {\r\n                return response\r\n            })\r\n    },\r\n    getTypes() {\r\n        return instance.get(`type`)\r\n            .then(response => {\r\n                return response\r\n            });\r\n    },\r\n    pokemonType(type: string) {\r\n        return instance.get(`type/${type}`)\r\n            .then(response => {\r\n                return response\r\n            });\r\n    },\r\n\r\n}\r\n","import {ThunkAction} from \"redux-thunk\";\r\nimport {pokemonAPI} from \"../API/api\";\r\nimport {pokemonListType, pokemonType} from \"../Types/Type\";\r\nimport {AppStateType, InferActionsType} from \"./store\";\r\n\r\n\r\nexport type initialStateType = typeof initialState\r\ntype ActionsType = InferActionsType<typeof actions>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\n\r\nlet initialState = {\r\n    pokemonListData: [] as Array<pokemonListType>,\r\n    pokemon: [] as Array<pokemonType>,\r\n    searchHistory: [] as Array<pokemonType>,\r\n    typesData: [] as Array<{ name: string }>,\r\n    activeFilter: [] as Array<{ type: string }>,\r\n    errorBySearch: false as boolean,\r\n    isShowPaginator: true as boolean,\r\n    isLoading: false as boolean,\r\n\r\n}\r\n\r\nconst pokedexReducer = (state = initialState, action: ActionsType): initialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n\r\n\r\n\r\n        case \"SET_POKEMON\": {\r\n            return {\r\n                ...state,\r\n                pokemonListData: action.payload\r\n            }\r\n        }\r\n\r\n        case \"SET_POKEMON_TYPE_DATA\": {\r\n            return {\r\n                ...state,\r\n                typesData: action.payload\r\n\r\n            }\r\n        }\r\n\r\n        case \"TOGGLE_LOADING\": {\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload\r\n            }\r\n        }\r\n        case \"TOGGLE_SHOW_PAGINATOR\": {\r\n            return {\r\n                ...state,\r\n                isShowPaginator: action.payload\r\n            }\r\n        }\r\n\r\n\r\n        case \"RESET_POKEMON_INFO\": {\r\n            return {\r\n                ...state,\r\n                pokemon: [],\r\n\r\n\r\n            }\r\n        }\r\n        case \"SET_POKEMON_INFO\": {\r\n            if (!state.pokemon.map(x => x.id).includes(action.payload.id))\r\n                return {\r\n                    ...state, pokemon: [...state.pokemon, action.payload],\r\n\r\n                }\r\n            else return state;\r\n        }\r\n        case \"SET_FIND_POKEMON\": {\r\n            if (!state.searchHistory.map(x => x.id).includes(action.payload.id))\r\n                return {\r\n                    ...state, searchHistory: [...state.searchHistory, action.payload],\r\n                }\r\n            else return state;\r\n        }\r\n        case \"DELETE_FIND_POKEMON\": {\r\n            return {\r\n                ...state, searchHistory: [],\r\n            }\r\n        }\r\n\r\n        case \"ERROR_SEARCH\": {\r\n            return {\r\n                ...state, errorBySearch: action.payload\r\n            }\r\n        }\r\n        case \"SET_ACTIVE_FILTER\": {\r\n            return {\r\n                ...state, activeFilter: [...state.activeFilter, {type: action.payload}]\r\n            }\r\n        }\r\n        case \"DEL_ACTIVE_FILTER\": {\r\n            return {\r\n                ...state, activeFilter: state.activeFilter.filter(item => item.type !== action.payload)\r\n\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const actions = {\r\n    setPokemon: (pokemon: Array<pokemonListType>) => ({type: \"SET_POKEMON\", payload: pokemon} as const),\r\n    toggleShowPaginator: (toggle: boolean) => ({type: \"TOGGLE_SHOW_PAGINATOR\", payload: toggle} as const),\r\n    toggleLoading: (toggle: boolean) => ({type: \"TOGGLE_LOADING\", payload: toggle} as const),\r\n    setActiveFilter: (activeFilter: string) => ({type: \"SET_ACTIVE_FILTER\", payload: activeFilter} as const),\r\n    delActiveFilter: (delFilter: string) => ({type: \"DEL_ACTIVE_FILTER\", payload: delFilter} as const),\r\n    errorSearch: (error: boolean) => ({type: \"ERROR_SEARCH\", payload: error} as const),\r\n    setPokemonTypeData: (types: Array<{ name: string }>) => ({type: \"SET_POKEMON_TYPE_DATA\", payload: types} as const),\r\n    setPokemonInfo: (info: pokemonType) => ({type: \"SET_POKEMON_INFO\", payload: info} as const),\r\n    resetPokemonInfo: () => ({type: \"RESET_POKEMON_INFO\"} as const),\r\n    setFindPokemon: (info: pokemonType) => ({type: \"SET_FIND_POKEMON\", payload: info} as const),\r\n    deleteFindPokemon: () => ({type: \"DELETE_FIND_POKEMON\"} as const),\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const requestPokemon = (count: number, cardQuantity: number | any): ThunkType => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        let response = await pokemonAPI.getPokemonList(count, cardQuantity)\r\n        dispatch(actions.setPokemon(response.data.results));\r\n        dispatch(actions.toggleShowPaginator(true))\r\n\r\n    }\r\n}\r\nexport const getPokemonData = (name: string): ThunkType => {\r\n\r\n    return async (dispatch) => {\r\n        let response = await pokemonAPI.getPokemonData(name)\r\n        dispatch(actions.setPokemonInfo(response.data));\r\n    }\r\n}\r\n\r\nexport const findPokemon = (name: string): ThunkType => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            let response = await pokemonAPI.getPokemonData(name)\r\n\r\n            dispatch(actions.setFindPokemon(response.data))\r\n            dispatch(actions.errorSearch(false))\r\n        } catch (e) {\r\n            dispatch(actions.errorSearch(true))\r\n        }\r\n    }\r\n}\r\nexport const getTypes = (): ThunkType => {\r\n    return async (dispatch) => {\r\n        let response = await pokemonAPI.getTypes()\r\n        dispatch(actions.setPokemonTypeData(response.data.results));\r\n\r\n    }\r\n}\r\nexport const  getPokemonWithTypes = (type: string): ThunkType => {\r\n    return async (dispatch) => {\r\n        let response = await pokemonAPI.pokemonType(type)\r\n        dispatch(actions.setPokemon(response.data.pokemon))\r\n        dispatch(actions.toggleShowPaginator(false))\r\n        if (response.data.pokemon.length === 0) {\r\n            alert(\"no pokemon with type \" + response.data.name)\r\n        }\r\n    }\r\n\r\n\r\n}\r\nexport default pokedexReducer;\r\n\r\n","import React from 'react';\r\nimport './Paginator.css';\r\n\r\ntype PropsType = {\r\n     cardQuantity: number,\r\n     viewCards10: number,\r\n     viewCards20: number,\r\n     viewCards50: number,\r\n     viewCards100: number,\r\n    onCardQuantity: (count:number)=> void,\r\n    onMorePokemon: (count:number)=> void\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({cardQuantity,viewCards10,viewCards20,viewCards50,viewCards100,\r\n                                          onCardQuantity,onMorePokemon}) => {\r\n    return (\r\n        <div className={\"paginator\"}>\r\n            <span\r\n                 className={(cardQuantity === viewCards10 && \"active_value paginator_value\") || \"paginator_value\"}\r\n                onClick={() => {\r\n                    onCardQuantity(viewCards10)\r\n                }}>{viewCards10}</span>\r\n            <span\r\n                className={(cardQuantity === viewCards20 && \"active_value paginator_value\") || \"paginator_value\"}\r\n                onClick={() => {\r\n                    onCardQuantity(viewCards20)\r\n                }}>{viewCards20}</span>\r\n            <div className={\"btn_more\"}>\r\n                <button onClick={() => {\r\n                    onMorePokemon(cardQuantity)\r\n                }}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    More\r\n                </button>\r\n            </div>\r\n            <span\r\n                className={(cardQuantity === viewCards50 && \"active_value paginator_value\") || \"paginator_value\"}\r\n                onClick={() => {\r\n                    onCardQuantity(viewCards50)\r\n                }}>{viewCards50}</span>\r\n            <span\r\n                 className={(cardQuantity === viewCards100 && \"active_value paginator_value\") || \"paginator_value\"}\r\n                onClick={() => {\r\n                    onCardQuantity(viewCards100)\r\n                }}>{viewCards100}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n     getPokemonData, requestPokemon,\r\n} from \"../../../Redux/pokedexReducer\";\r\nimport { AppStateType } from \"../../../Redux/store\";\r\nimport {pokemonListType, pokemonType } from \"../../../Types/Type\";\r\nimport Paginator from \"./Paginator\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    pokemonInfo: Array<pokemonType>\r\n    pokemonList: Array<pokemonListType>\r\n\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    requestPokemon:  (count: number, cardQuantity: number) => any\r\n    getPokemonData: (name: string)=> void\r\n}\r\n\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\ntype StateType = {\r\n    cardQuantity: number,\r\n    viewCards10: number,\r\n    viewCards20: number,\r\n    viewCards50: number,\r\n    viewCards100: number,\r\n}\r\n\r\nclass PaginatorContainer extends React.Component<PropsType, StateType> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            viewCards10: 10,\r\n            viewCards20: 20,\r\n            viewCards50: 50,\r\n            viewCards100:100,\r\n            cardQuantity: 20 };\r\n    }\r\n\r\n\r\n\r\n    onCardQuantity = (number: number) => {\r\n        this.setState({\r\n            cardQuantity: number\r\n        });\r\n    }\r\n\r\n    onMorePokemon = (cardQuantity:number) => {\r\n        let count = this.props.pokemonInfo.length\r\n        this.props.requestPokemon(count, cardQuantity).then(() => {\r\n            this.props.pokemonList.forEach(element => this.props.getPokemonData(element.name))\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return <Paginator {...this.props}  viewCards20={this.state.viewCards20}  viewCards50={this.state.viewCards50}\r\n                          viewCards100={this.state.viewCards100}\r\n                          cardQuantity={this.state.cardQuantity} viewCards10={this.state.viewCards10}  onMorePokemon={this.onMorePokemon} onCardQuantity={this.onCardQuantity}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        pokemonList: state.pokedex.pokemonListData,\r\n        pokemonInfo: state.pokedex.pokemon,\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {\r\n    requestPokemon,\r\n    getPokemonData,\r\n\r\n\r\n})(PaginatorContainer);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport PokemonCard from \"./PokemonCard/PokemonCard\";\r\nimport \"./PokemonList.css\"\r\nimport PaginatorContainer from \"./Paginator/PaginatorContainer\";\r\nimport { pokemonType } from '../../Types/Type';\r\n\r\n\r\n\r\ntype PropsType = {\r\n    pokemonInfo: Array<pokemonType>\r\n    searchHistory: Array<pokemonType>\r\n    isShowPaginator: boolean\r\n    onDeleteFindPokemon: ()=> void\r\n\r\n}\r\n\r\nlet PokemonList: React.FC<PropsType> = ({pokemonInfo,isShowPaginator, searchHistory,  onDeleteFindPokemon})=> {\r\n\r\n    pokemonInfo.sort(function (a, b) {\r\n        return a.id - b.id\r\n    })\r\n\r\n    let onMapping = (mapName: Array<pokemonType>) => {\r\n        return mapName.map(p => <PokemonCard key={p.id} id={p.id} hp={p.stats[0].base_stat}\r\n                                             height={p.height} weight={p.weight}\r\n                                             type={p.types[0].type.name}\r\n                                             name={p.name}\r\n                                             photo={p.sprites.other.dream_world.front_default == null ? p.sprites.front_default : p.sprites.other.dream_world.front_default}\r\n                                             attack={p.stats[1].base_stat} defense={p.stats[2].base_stat}\r\n                                             specialAttack={p.stats[3].base_stat}\r\n                                             specialDefense={p.stats[4].base_stat}\r\n                                             speed={p.stats[5].base_stat}/>)\r\n }\r\n    return (<div>\r\n            {searchHistory.length > 0  &&  <div className=\"found_border\">\r\n                <h1>Found Pokemon:</h1>\r\n                <div className=\"container\">\r\n                    {onMapping(searchHistory)}\r\n                </div>\r\n                <button className={\"btn_close_searchHistory\"} onClick={() => {\r\n                    onDeleteFindPokemon()\r\n                }}> close\r\n                </button>\r\n            </div>}\r\n            <div className=\"container\">\r\n                {onMapping(pokemonInfo)}\r\n            </div>\r\n            {isShowPaginator && <PaginatorContainer/>}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default PokemonList;","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\n\r\n\r\n\r\n let Preloader = ()=>{\r\n\r\n    return(<div className=\"size\">\r\n        <div className=\"loader\">\r\n        <svg version=\"1.1\" id=\"Ebene_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n             x=\"0px\" y=\"0px\"\r\n             viewBox=\"0 0 330 331.7\" enableBackground=\"new 0 0 330 331.7\" xmlSpace=\"preserve\">\r\n      <circle id=\"center\" fill=\"#FFFFFF\" cx=\"165\" cy=\"165.9\" r=\"36.5\"/>\r\n            <g id=\"bottom\">\r\n<path id=\"bottom1\" fill=\"#FFFFFF\" d=\"M165,267.6c-28.7,0-54.6-11.9-73.1-31L76.2,252c22.5,23.2,53.9,37.6,88.8,37.6\r\n\t\tc30.5,0,58.4-11,80-29.3l-14.6-16.5C212.7,258.6,189.9,267.6,165,267.6z\"/>\r\n                <path id=\"bottom2\" fill=\"#FFFFFF\" d=\"M288.1,178.4l-22.1,0c-3.2,26.1-16.4,49.2-35.6,65.3l14.6,16.5\r\n\t\tC268.7,240.1,284.8,211.2,288.1,178.4z\"/>\r\n                <path id=\"bottom3\" fill=\"#FFFFFF\" d=\"M244.8,178.4C244.8,178.4,244.8,178.4,244.8,178.4l-21.8,0c-3.8,18.8-16.6,33.7-33.7,41.4l0,0\r\n\t\tl8.8,19.6c-9.4,4.3-19.8,6.8-30.8,7.1l0.5,21c50.6-1.4,92-39.8,98.1-89.1L244.8,178.4z\"/>\r\n                <path id=\"bottom4\" fill=\"#FFFFFF\" d=\"M198.2,239.5l-8.8-19.6c-7.4,3.4-15.7,5.2-24.4,5.2c-28.4,0-52.1-20-57.9-46.6l-21.8,0l-0.1,0\r\n\t\tl-21.1,0c0,0.1,0,0.1,0,0.2l-0.1-0.2l-22.1,0.1c2.9,28.5,15.4,54.1,34.3,73.5l15.7-15.4l-0.1-0.2c18.5,19.2,44.5,31.1,73.2,31.1\r\n\t\tc0.9,0,1.9,0,2.8,0l-0.5-21C178.4,246.2,188.8,243.7,198.2,239.5z\"/>\r\n</g>\r\n            <g id=\"top\">\r\n\t<path id=\"top3\" fill=\"#FFFFFF\" d=\"M288.1,153.2c-2.2-22.1-10.3-42.5-22.7-59.7l-17.9,12.9l-17,12.3c0.1,0.2,0.2,0.3,0.3,0.5\r\n\t\tc-14.6-20.6-38.7-34-65.8-34c-40.3,0-73.7,29.5-79.8,68.1l21.9,0c5.8-26.7,29.5-46.6,57.9-46.6c28.4,0,52.1,20,57.9,46.6\r\n\t\tL288.1,153.2z\"/>\r\n                <path id=\"top2\" fill=\"#FFFFFF\" d=\"M165,64.1c-39.2,0-73.3,22.2-90.2,54.7c0,0,0,0,0,0l-19.5-10.2c-7.1,13.6-11.7,28.6-13.3,44.6\r\n\t\tl22.1,0v0l21.2,0c6-38.6,39.5-68.1,79.8-68.1c7.9,0,15.6,1.2,22.8,3.3l5.9-20.2C184.6,65.6,175,64.1,165,64.1z\"/>\r\n                <path id=\"top1\" fill=\"#FFFFFF\" d=\"M193.7,68.2l-5.9,20.2c17.4,5.1,32.4,15.9,42.7,30.3l17-12.3l17.9-12.9\r\n\t\tc-15.9-22-38.8-38.6-65.5-46.4c-11.1-3.3-22.8-5-34.9-5c-47.7,0-89.1,27-109.7,66.6l19.5,10.2c17-32.5,51-54.7,90.2-54.7\r\n\t\tC175,64.1,184.6,65.6,193.7,68.2\"/>\r\n</g>\r\n</svg>\r\n\r\n    </div>\r\n    </div>)\r\n\r\n\r\n\r\n }\r\n\r\n export default Preloader;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PokemonList from \"./PokemonList\";\r\nimport {\r\n    actions,\r\n    getPokemonData,\r\n    requestPokemon,\r\n} from \"../../Redux/pokedexReducer\";\r\nimport {AppStateType} from \"../../Redux/store\";\r\nimport {pokemonListType, pokemonType} from \"../../Types/Type\";\r\nimport Preloader from \"../Preloader/preloader\";\r\n\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    pokemonInfo: Array<pokemonType>\r\n    searchHistory: Array<pokemonType>\r\n    pokemonList: Array<pokemonListType>\r\n    isShowPaginator: boolean\r\n    isLoading: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    requestPokemon: (count: number, cardQuantity: number | any) => any\r\n    getPokemonData: (name: string) => void\r\n    deleteFindPokemon: () => void\r\n    errorSearch: (error: boolean) => void\r\n}\r\n\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nclass PokemonListContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        this.props.requestPokemon(0, 20).then(() => {\r\n            this.props.pokemonList.forEach(element => this.props.getPokemonData(element.name))\r\n        })\r\n\r\n    }\r\n\r\n    onDeleteFindPokemon = () => {\r\n        this.props.deleteFindPokemon()\r\n        this.props.errorSearch(false)\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.props.isLoading){\r\n            return <Preloader />\r\n        }\r\n\r\n        return (\r\n             <PokemonList {...this.props} onDeleteFindPokemon={this.onDeleteFindPokemon}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        pokemonInfo: state.pokedex.pokemon,\r\n        pokemonList: state.pokedex.pokemonListData,\r\n        searchHistory: state.pokedex.searchHistory,\r\n        isShowPaginator: state.pokedex.isShowPaginator,\r\n        isLoading: state.pokedex.isLoading\r\n    }\r\n\r\n}\r\n\r\nexport default connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {\r\n    requestPokemon,\r\n    getPokemonData,\r\n    deleteFindPokemon: actions.deleteFindPokemon,\r\n    errorSearch: actions.errorSearch,\r\n})(PokemonListContainer);\r\n\r\n","import {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport './PokemonSearchForm.css';\r\ntype PropsType= {\r\n    errorBySearch:boolean\r\n    onSearchPokemon:(name: string)=> void\r\n}\r\n\r\ntype PokemonSearchFormType={\r\n    term: string\r\n}\r\n\r\n\r\nlet PokemonSearchForm: React.FC<PropsType> = (props)=> {\r\n\r\n    const submit = (values: PokemonSearchFormType, {setSubmitting}: {setSubmitting: (isSubmitting:boolean)=> void}) => {\r\n\r\n        let name = values.term.toLowerCase()\r\n            props.onSearchPokemon(name)\r\n            setSubmitting(false);\r\n    }\r\n\r\n    return <Formik initialValues={{term: ''}}  onSubmit={submit}>\r\n            {({isSubmitting}) => (\r\n                <Form>\r\n                    {props.errorBySearch&& <div style={{ padding: \"15px 10px\", color: \"red\"}}>Pokemon is not found</div>}\r\n                    <Field className={props.errorBySearch  ? \"error_name\": null} type=\"text\"\r\n                           name=\"term\" placeholder=\"🔍\"  />\r\n                    <button className={\"btn_find\"} type=\"submit\" disabled={isSubmitting}>\r\n                        Find\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n}\r\n\r\nexport default PokemonSearchForm","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PokemonSearchForm from \"./PokemonSearchForm\";\r\nimport {findPokemon} from \"../../Redux/pokedexReducer\";\r\nimport { AppStateType } from \"../../Redux/store\";\r\ntype MapStateToPropsType = {\r\n    errorBySearch: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    findPokemon: (name: string)=> void\r\n}\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass PokemonSearchFormContainer extends React.Component<PropsType> {\r\n\r\n\r\n    onSearchPokemon = (name:string) => {\r\n        if(name !== \"\")\r\n        this.props.findPokemon(name)\r\n    }\r\n\r\n    render() {\r\n        return <PokemonSearchForm {...this.props} onSearchPokemon={this.onSearchPokemon}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        errorBySearch: state.pokedex.errorBySearch,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {findPokemon\r\n})(PokemonSearchFormContainer);\r\n","import React, {useState} from 'react';\r\nimport \"./FilterCheckbox.css\"\r\n\r\n\r\ntype PropsType = {\r\n    setCheckType: (name: string)=> void\r\n    delCheckType: (name: string)=> void\r\n    name: string\r\n}\r\n\r\n\r\n\r\n\r\nlet FilterCheckbox: React.FC<PropsType> = ({setCheckType, delCheckType, name })=> {\r\n\r\n    let [activeType, setActiveType] = useState<boolean>(false);\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"checkboxContainer\">\r\n            <input type=\"checkbox\" id={\"cb-\"+name} className=\"checkboxType\" checked={activeType} onChange={() => {\r\n                setActiveType(!activeType)\r\n                if (!activeType) {\r\n                    setCheckType(name)\r\n                }else delCheckType(name)\r\n\r\n            }\r\n            }/>\r\n            <label  htmlFor={\"cb-\"+name}>{name}</label>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default FilterCheckbox;","import React from 'react';\r\nimport \"./Filter.css\"\r\nimport FilterCheckbox from \"./FilterCheckbox/FilterCheckbox\";\r\n\r\n\r\ntype PropsType = {\r\n    typesData: Array<{ name: string }>\r\n    setCheckType: (name: string) => void\r\n    delCheckType: (name: string) => void\r\n    onShowAllPokemon: () => any\r\n    onShowPokemon: () => any\r\n    activeFilter: Array<{ type: string }>\r\n    activeBtn: boolean\r\n    isLoading: boolean\r\n\r\n}\r\n\r\n\r\nlet Filter: React.FC<PropsType> = ({isLoading,\r\n                                       activeBtn, typesData, setCheckType, delCheckType,\r\n                                       onShowAllPokemon, onShowPokemon, activeFilter\r\n                                   }) => {\r\n\r\n    let TypesElement = typesData.map(p => <FilterCheckbox key={p.name}\r\n                                                          name={p.name}\r\n                                                          setCheckType={setCheckType}\r\n                                                          delCheckType={delCheckType}/>)\r\n\r\n\r\n    return (<div>\r\n            <div className=\"types_block\">\r\n                {TypesElement}\r\n            </div>\r\n\r\n            <div className=\"types_block_find\">\r\n                {activeBtn && <button className={\"btn_find_type\"} disabled={isLoading} onClick={() => {\r\n                    onShowAllPokemon()\r\n                }}>ALL TYPES\r\n                </button>}\r\n\r\n\r\n                <button className=\"btn_find_type\" disabled={activeFilter.length === 0} onClick={() => {\r\n                    onShowPokemon()\r\n                }}>FIND\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filter;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Filter from \"./Filter\";\r\nimport {\r\n    actions, getPokemonData,\r\n    getPokemonWithTypes,\r\n    getTypes,\r\n    requestPokemon,\r\n} from \"../../Redux/pokedexReducer\";\r\nimport {pokemonListType} from \"../../Types/Type\";\r\nimport {AppStateType} from \"../../Redux/store\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n\r\n    activeFilter: Array<{ type: string }>\r\n    pokemonList: Array<pokemonListType>\r\n    typesData: Array<{ name: string }>\r\n    isLoading: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    getTypes: () => void\r\n    getPokemonWithTypes: (type: string) => any\r\n    requestPokemon: (count: number, cardQuantity: number | any) => any\r\n    setActiveFilter: (name: string) => void\r\n    delActiveFilter: (name: string) => void\r\n    resetPokemonInfo: () => any\r\n    getPokemonData: (name: string) => void\r\n    toggleLoading: (toggle: boolean) => any\r\n\r\n}\r\n\r\n\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\ntype StateType = {\r\n    activeBtn: boolean\r\n}\r\n\r\n\r\nclass FilterListContainer extends React.Component<PropsType, StateType> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            activeBtn: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getTypes()\r\n    }\r\n\r\n    isActiveBtn = (active: boolean) => {\r\n        this.setState({\r\n            activeBtn: active\r\n        });\r\n    }\r\n\r\n    onShowPokemon = async () => {\r\n        this.props.toggleLoading(true)\r\n        this.props.resetPokemonInfo()\r\n        for (const element of this.props.activeFilter) {\r\n            await this.props.getPokemonWithTypes(element.type);\r\n            for (const el of this.props.pokemonList) {\r\n                await this.props.getPokemonData(el.pokemon.name)\r\n            }\r\n        }\r\n        this.isActiveBtn(true)\r\n        this.props.toggleLoading(false)\r\n    }\r\n\r\n    onShowAllPokemon = async () => {\r\n        this.props.toggleLoading(true)\r\n        this.props.resetPokemonInfo()\r\n        await this.props.requestPokemon(0, 20);\r\n        for (const el of this.props.pokemonList) {\r\n            await this.props.getPokemonData(el.name)\r\n        }\r\n        this.isActiveBtn(false)\r\n        this.props.toggleLoading(false)\r\n    }\r\n\r\n\r\n    setCheckType = (name: string) => {\r\n        this.props.setActiveFilter(name)\r\n    }\r\n\r\n    delCheckType = (name: string) => {\r\n        this.props.delActiveFilter(name)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <Filter {...this.props} activeBtn={this.state.activeBtn} onShowAllPokemon={this.onShowAllPokemon}\r\n                       onShowPokemon={this.onShowPokemon}\r\n                       setCheckType={this.setCheckType} delCheckType={this.delCheckType}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        typesData: state.pokedex.typesData,\r\n        pokemonList: state.pokedex.pokemonListData,\r\n        activeFilter: state.pokedex.activeFilter,\r\n        isLoading:  state.pokedex.isLoading\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {\r\n    getTypes,\r\n    getPokemonWithTypes,\r\n    requestPokemon,\r\n    getPokemonData,\r\n    setActiveFilter: actions.setActiveFilter,\r\n    delActiveFilter: actions.delActiveFilter,\r\n    resetPokemonInfo: actions.resetPokemonInfo,\r\n    toggleLoading: actions.toggleLoading,\r\n\r\n})(FilterListContainer);\r\n\r\n\r\n\r\n","import './App.css';\r\nimport PokemonListContainer from \"./Components/PokemonList/PokemonListContainer\";\r\nimport React, {useEffect} from \"react\";\r\nimport PokemonSearchFormContainer from \"./Components/PokemonSearchForm/PokemonSearchFormContainer\";\r\nimport FilterContainer from \"./Components/Filter/FilterContainer\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    document.title = \"pokedex\"\r\n  }, []);\r\n  return (\r\n  <div>\r\n    <PokemonSearchFormContainer />\r\n    <FilterContainer />\r\n    <PokemonListContainer />\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import pokedexReducer from \"./pokedexReducer\";\r\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nlet rootReducer = combineReducers({\r\n    pokedex: pokedexReducer\r\n})\r\n\r\ntype rootReducerType = typeof rootReducer //(globalstate: AppStateType) => AppStateType\r\nexport type AppStateType = ReturnType<rootReducerType>\r\n\r\n\r\ntype PropertiesTypes<T> = T extends {[key:string]: infer U} ? U : never\r\n\r\nexport type InferActionsType<T extends {[key:string]: (...args: any[])=> any}>= ReturnType<PropertiesTypes<T>>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./Redux/store\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n    <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}